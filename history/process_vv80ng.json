[{
  "history_id" : "e9q0qpe39xs",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\n",
  "history_begin_time" : 1664372417161,
  "history_end_time" : 1664373343361,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "k9z19lmnbd1",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "",
  "history_begin_time" : 1664371753991,
  "history_end_time" : 1664371757183,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "2j1h7crns6n",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Cannot run program \"python3.8\" (in directory \"C:\\Users\\user\\gw-workspace\\2j1h7crns6n\"): CreateProcess error=2, The system cannot find the file specified",
  "history_begin_time" : 1664371271034,
  "history_end_time" : 1664371271288,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "vk8s90rwocc",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "",
  "history_begin_time" : 1664371095101,
  "history_end_time" : 1664371098245,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "wf5cddxp2sg",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\n",
  "history_begin_time" : 1664370644698,
  "history_end_time" : 1664370663664,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "9hdflvm6xrr",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9hdflvm6xrr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\n",
  "history_begin_time" : 1664363509780,
  "history_end_time" : 1664364134889,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "2ubxkb6jb2g",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\2ubxkb6jb2g\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\n",
  "history_begin_time" : 1664362701371,
  "history_end_time" : 1664363371358,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "qgi7ec01hla",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\qgi7ec01hla\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\n",
  "history_begin_time" : 1664361875576,
  "history_end_time" : 1664362462222,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "eibgy1rh4qt",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\eibgy1rh4qt\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\n",
  "history_begin_time" : 1664328003345,
  "history_end_time" : 1664333649089,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "4rdd7lm6ihf",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4rdd7lm6ihf\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\n",
  "history_begin_time" : 1664327542654,
  "history_end_time" : 1664327841706,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "9czmp2o3juv",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\9czmp2o3juv\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664326995774,
  "history_end_time" : 1664327014026,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "y21qscpv5iy",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\y21qscpv5iy\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664326919091,
  "history_end_time" : 1664326938069,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "hYlhKwtHccT7",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\hYlhKwtHccT7\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664326649028,
  "history_end_time" : 1664326671208,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "gppn6xeg92h",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_multiprocessor.py\", line 24, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_multiprocessor.py\", line 24, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_multiprocessor.py\", line 24, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_multiprocessor.py\", line 24, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_multiprocessor.py\", line 24, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_multiprocessor.py\", line 24, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_multiprocessor.py\", line 24, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_multiprocessor.py\", line 24, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\gppn6xeg92h\\importing_multiprocessor.py\", line 24, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\n",
  "history_begin_time" : 1664326294239,
  "history_end_time" : 1664326399720,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "wzagm36xxgh",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\wzagm36xxgh\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664326182440,
  "history_end_time" : 1664326206894,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "4178pu1fyqr",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\4178pu1fyqr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664324819898,
  "history_end_time" : 1664324838327,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "kycr4hm7yjg",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\kycr4hm7yjg\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664324713491,
  "history_end_time" : 1664324733985,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "xj73c5opbx6",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\xj73c5opbx6\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664324667136,
  "history_end_time" : 1664324694566,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "gbjyy87nzs9",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\gbjyy87nzs9\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664324350812,
  "history_end_time" : 1664324369549,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "jdxrij8i8y6",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Running",
  "history_begin_time" : 1664324112241,
  "history_end_time" : 1664324115996,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "frwcep2k4ck",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\frwcep2k4ck\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664309466032,
  "history_end_time" : 1664309484718,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "5q1zdpnrgjl",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\5q1zdpnrgjl\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664309076648,
  "history_end_time" : 1664309094350,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "l2pqf1ucd3b",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\l2pqf1ucd3b\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664304884665,
  "history_end_time" : 1664304908590,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "l6zkovun4b0",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\l6zkovun4b0\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664279643259,
  "history_end_time" : 1664279662678,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "f30s9djjp0t",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\f30s9djjp0t\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664279522618,
  "history_end_time" : 1664279543458,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "i3xbq1bugtr",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\i3xbq1bugtr\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664279143226,
  "history_end_time" : 1664279163333,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "euwgo34i428",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\euwgo34i428\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664278528724,
  "history_end_time" : 1664278549028,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "s28hsekftrx",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\s28hsekftrx\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664278226132,
  "history_end_time" : 1664278245653,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "Y3UM1iNpgwt8",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\Y3UM1iNpgwt8\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664278077752,
  "history_end_time" : 1664278096493,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "HYyS5rZ10vMX",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"importing_logger.py\", line 16, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\HYyS5rZ10vMX\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\nNameError: name 'generate_segmentation_mask_from_file' is not defined\n",
  "history_begin_time" : 1664277923105,
  "history_end_time" : 1664277946682,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "7HmmM8iLCM8e",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 13, in <module>\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\nNameError: name 'train_folder' is not defined\n",
  "history_begin_time" : 1664277747630,
  "history_end_time" : 1664277757032,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "onwrnfzneel",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 11, in <module>\n    train_dates, train_files = get_dates_and_files(\nNameError: name 'get_dates_and_files' is not defined\n",
  "history_begin_time" : 1664277097571,
  "history_end_time" : 1664277107577,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "994jziffmp6",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 11, in <module>\n    train_dates, train_files = get_dates_and_files(\nNameError: name 'get_dates_and_files' is not defined\n",
  "history_begin_time" : 1664276488590,
  "history_end_time" : 1664276496440,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "737s9p44jgu",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 11, in <module>\n    train_dates, train_files = get_dates_and_files(\nNameError: name 'get_dates_and_files' is not defined\n",
  "history_begin_time" : 1664216928415,
  "history_end_time" : 1664216937068,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "w0r6seinthc",
  "history_input" : "import logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 9, in <module>\n    train_dates, train_files = get_dates_and_files(\nNameError: name 'get_dates_and_files' is not defined\n",
  "history_begin_time" : 1664211544823,
  "history_end_time" : 1664211546472,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "0r56hyxirzo",
  "history_input" : "import logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 9, in <module>\n    train_dates, train_files = get_dates_and_files(\nNameError: name 'get_dates_and_files' is not defined\n",
  "history_begin_time" : 1663682178805,
  "history_end_time" : 1663682188316,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "f4r155imhnr",
  "history_input" : "import logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 9, in <module>\n    train_dates, train_files = get_dates_and_files(\nNameError: name 'get_dates_and_files' is not defined\n",
  "history_begin_time" : 1663680962267,
  "history_end_time" : 1663680964506,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "t0bq08t5u6i",
  "history_input" : "import logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 9, in <module>\n    train_dates, train_files = get_dates_and_files(\nNameError: name 'get_dates_and_files' is not defined\n",
  "history_begin_time" : 1663679450185,
  "history_end_time" : 1663679452021,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "9l9mqif0wkm",
  "history_input" : "import logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 9, in <module>\n    train_dates, train_files = get_dates_and_files(\nNameError: name 'get_dates_and_files' is not defined\n",
  "history_begin_time" : 1663678070900,
  "history_end_time" : 1663678072717,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "i5gzejbdw11",
  "history_input" : "import logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 9, in <module>\n    train_dates, train_files = get_dates_and_files(\nNameError: name 'get_dates_and_files' is not defined\n",
  "history_begin_time" : 1663677929317,
  "history_end_time" : 1663677931331,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "awwun2dtmh8",
  "history_input" : "import logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 9, in <module>\n    train_dates, train_files = get_dates_and_files(\nNameError: name 'get_dates_and_files' is not defined\n",
  "history_begin_time" : 1663677733585,
  "history_end_time" : 1663677735247,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "niko1gxxj6r",
  "history_input" : "import logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 9, in <module>\n    train_dates, train_files = get_dates_and_files(\nNameError: name 'get_dates_and_files' is not defined\n",
  "history_begin_time" : 1663183491969,
  "history_end_time" : 1663183493542,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "s8grxuawe16",
  "history_input" : "import logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Traceback (most recent call last):\n  File \"importing_logger.py\", line 9, in <module>\n    train_dates, train_files = get_dates_and_files(\nNameError: name 'get_dates_and_files' is not defined\n",
  "history_begin_time" : 1663183390108,
  "history_end_time" : 1663183391621,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "i42bb10s7h0",
  "history_input" : null,
  "history_output" : "Authentication Failed. Wrong Password.",
  "history_begin_time" : 1663182766089,
  "history_end_time" : 1663182766246,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "y1wxxn4hox1",
  "history_input" : null,
  "history_output" : "Authentication Failed. Wrong Password.",
  "history_begin_time" : 1663182734374,
  "history_end_time" : 1663182734537,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "295maxrc7fh",
  "history_input" : null,
  "history_output" : "Authentication Failed. Wrong Password.",
  "history_begin_time" : 1663182673240,
  "history_end_time" : 1663182673417,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "9hgaqgj3jpe",
  "history_input" : "import logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "Cannot run program \"python3.8\" (in directory \"C:\\Users\\user\\gw-workspace\\9hgaqgj3jpe\"): CreateProcess error=2, The system cannot find the file specified",
  "history_begin_time" : 1663034976686,
  "history_end_time" : 1663034977787,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "vgjt881wfpl",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664279406311,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1a0d0l8upgy",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664324237663,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "gvbto7ui3q7",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664324597685,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ciltey1fib3",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664325180153,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "hjbso01ldlc",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664372085320,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Stopped"
},]
