[{
  "history_id" : "2fp1m6c3zd8",
  "history_input" : "#Demonstrate the beginnings of how one can use classical computer vision techniques to recover eddy contours from the predicted segnmentation masks.\n\nfrom eddy_import import *\nfrom animation import *\np = preds[0].astype(np.uint8)\n\nprint(f\"Number of anticyclonic eddies: {count_eddies(p, eddy_type='anticyclonic')}\")\nprint(f\"Number of cyclonic eddies: {count_eddies(p, eddy_type='cyclonic')}\")\nprint(f\"Number of both eddies: {count_eddies(p, eddy_type='both')}\")\n\n# draw contours on the image\nthr = cv2.threshold(p, 0, 1, cv2.THRESH_BINARY)[1].astype(np.uint8)\ncontours, hierarchy = cv2.findContours(thr, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\nimg = np.zeros(p.shape, np.uint8)\ncv2.drawContours(img, contours, -1, (255, 255, 255), 1)\nplt.imshow(img, cmap=\"gray\")\nplt.axis(\"off\")\n\n# get average contour area\narea = 0\nfor cnt in contours:\n    area += cv2.contourArea(cnt)\narea /= len(contours)\nprint(f\"Average contour area: {area:.2f} sq. pixels\")",
  "history_output" : "Traceback (most recent call last):\n  File \"cyclic_anticyclonic_eddies.py\", line 4, in <module>\n    from animation import *\n  File \"C:\\Users\\user\\gw-workspace\\2fp1m6c3zd8\\animation.py\", line 7, in <module>\n    model.eval()\nNameError: name 'model' is not defined\n",
  "history_begin_time" : 1664371927827,
  "history_end_time" : 1664371937122,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "jsv0hqerj3i",
  "history_input" : "#Demonstrate the beginnings of how one can use classical computer vision techniques to recover eddy contours from the predicted segnmentation masks.\n\nfrom eddy_import import *\nfrom animation import *\np = preds[0].astype(np.uint8)\n\nprint(f\"Number of anticyclonic eddies: {count_eddies(p, eddy_type='anticyclonic')}\")\nprint(f\"Number of cyclonic eddies: {count_eddies(p, eddy_type='cyclonic')}\")\nprint(f\"Number of both eddies: {count_eddies(p, eddy_type='both')}\")\n\n# draw contours on the image\nthr = cv2.threshold(p, 0, 1, cv2.THRESH_BINARY)[1].astype(np.uint8)\ncontours, hierarchy = cv2.findContours(thr, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\nimg = np.zeros(p.shape, np.uint8)\ncv2.drawContours(img, contours, -1, (255, 255, 255), 1)\nplt.imshow(img, cmap=\"gray\")\nplt.axis(\"off\")\n\n# get average contour area\narea = 0\nfor cnt in contours:\n    area += cv2.contourArea(cnt)\narea /= len(contours)\nprint(f\"Average contour area: {area:.2f} sq. pixels\")",
  "history_output" : "Cannot run program \"python3.8\" (in directory \"C:\\Users\\user\\gw-workspace\\jsv0hqerj3i\"): CreateProcess error=2, The system cannot find the file specified",
  "history_begin_time" : 1664371265036,
  "history_end_time" : 1664371265350,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "3z94khde2mi",
  "history_input" : "#Demonstrate the beginnings of how one can use classical computer vision techniques to recover eddy contours from the predicted segnmentation masks.\n\nfrom eddy_import import *\nfrom animation import *\np = preds[0].astype(np.uint8)\n\nprint(f\"Number of anticyclonic eddies: {count_eddies(p, eddy_type='anticyclonic')}\")\nprint(f\"Number of cyclonic eddies: {count_eddies(p, eddy_type='cyclonic')}\")\nprint(f\"Number of both eddies: {count_eddies(p, eddy_type='both')}\")\n\n# draw contours on the image\nthr = cv2.threshold(p, 0, 1, cv2.THRESH_BINARY)[1].astype(np.uint8)\ncontours, hierarchy = cv2.findContours(thr, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\nimg = np.zeros(p.shape, np.uint8)\ncv2.drawContours(img, contours, -1, (255, 255, 255), 1)\nplt.imshow(img, cmap=\"gray\")\nplt.axis(\"off\")\n\n# get average contour area\narea = 0\nfor cnt in contours:\n    area += cv2.contourArea(cnt)\narea /= len(contours)\nprint(f\"Average contour area: {area:.2f} sq. pixels\")",
  "history_output" : "Traceback (most recent call last):\n  File \"cyclic_anticyclonic_eddies.py\", line 4, in <module>\n    from animation import *\n  File \"C:\\Users\\user\\gw-workspace\\3z94khde2mi\\animation.py\", line 7, in <module>\n    model.eval()\nNameError: name 'model' is not defined\n",
  "history_begin_time" : 1664370774818,
  "history_end_time" : 1664370784177,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "5ypcmn2fx5g",
  "history_input" : "#Demonstrate the beginnings of how one can use classical computer vision techniques to recover eddy contours from the predicted segnmentation masks.\n\nfrom eddy_import import *\nfrom animation import *\np = preds[0].astype(np.uint8)\n\nprint(f\"Number of anticyclonic eddies: {count_eddies(p, eddy_type='anticyclonic')}\")\nprint(f\"Number of cyclonic eddies: {count_eddies(p, eddy_type='cyclonic')}\")\nprint(f\"Number of both eddies: {count_eddies(p, eddy_type='both')}\")\n\n# draw contours on the image\nthr = cv2.threshold(p, 0, 1, cv2.THRESH_BINARY)[1].astype(np.uint8)\ncontours, hierarchy = cv2.findContours(thr, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\nimg = np.zeros(p.shape, np.uint8)\ncv2.drawContours(img, contours, -1, (255, 255, 255), 1)\nplt.imshow(img, cmap=\"gray\")\nplt.axis(\"off\")\n\n# get average contour area\narea = 0\nfor cnt in contours:\n    area += cv2.contourArea(cnt)\narea /= len(contours)\nprint(f\"Average contour area: {area:.2f} sq. pixels\")",
  "history_output" : "Traceback (most recent call last):\n  File \"cyclic_anticyclonic_eddies.py\", line 4, in <module>\n    from animation import *\n  File \"C:\\Users\\user\\gw-workspace\\5ypcmn2fx5g\\animation.py\", line 7, in <module>\n    model.eval()\nNameError: name 'model' is not defined\n",
  "history_begin_time" : 1664364344976,
  "history_end_time" : 1664364354948,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "x28ih4ljh9m",
  "history_input" : "#Demonstrate the beginnings of how one can use classical computer vision techniques to recover eddy contours from the predicted segnmentation masks.\n\nfrom eddy_import import *\nfrom animation import *\np = preds[0].astype(np.uint8)\n\nprint(f\"Number of anticyclonic eddies: {count_eddies(p, eddy_type='anticyclonic')}\")\nprint(f\"Number of cyclonic eddies: {count_eddies(p, eddy_type='cyclonic')}\")\nprint(f\"Number of both eddies: {count_eddies(p, eddy_type='both')}\")\n\n# draw contours on the image\nthr = cv2.threshold(p, 0, 1, cv2.THRESH_BINARY)[1].astype(np.uint8)\ncontours, hierarchy = cv2.findContours(thr, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\nimg = np.zeros(p.shape, np.uint8)\ncv2.drawContours(img, contours, -1, (255, 255, 255), 1)\nplt.imshow(img, cmap=\"gray\")\nplt.axis(\"off\")\n\n# get average contour area\narea = 0\nfor cnt in contours:\n    area += cv2.contourArea(cnt)\narea /= len(contours)\nprint(f\"Average contour area: {area:.2f} sq. pixels\")",
  "history_output" : "Traceback (most recent call last):\n  File \"cyclic_anticyclonic_eddies.py\", line 4, in <module>\n    from animation import *\n  File \"C:\\Users\\user\\gw-workspace\\x28ih4ljh9m\\animation.py\", line 7, in <module>\n    model.eval()\nNameError: name 'model' is not defined\n",
  "history_begin_time" : 1664310033214,
  "history_end_time" : 1664310042802,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "j50bi76jkt8",
  "history_input" : "#Demonstrate the beginnings of how one can use classical computer vision techniques to recover eddy contours from the predicted segnmentation masks.\n\nfrom eddy_import import *\nfrom animation import *\np = preds[0].astype(np.uint8)\n\nprint(f\"Number of anticyclonic eddies: {count_eddies(p, eddy_type='anticyclonic')}\")\nprint(f\"Number of cyclonic eddies: {count_eddies(p, eddy_type='cyclonic')}\")\nprint(f\"Number of both eddies: {count_eddies(p, eddy_type='both')}\")\n\n# draw contours on the image\nthr = cv2.threshold(p, 0, 1, cv2.THRESH_BINARY)[1].astype(np.uint8)\ncontours, hierarchy = cv2.findContours(thr, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\nimg = np.zeros(p.shape, np.uint8)\ncv2.drawContours(img, contours, -1, (255, 255, 255), 1)\nplt.imshow(img, cmap=\"gray\")\nplt.axis(\"off\")\n\n# get average contour area\narea = 0\nfor cnt in contours:\n    area += cv2.contourArea(cnt)\narea /= len(contours)\nprint(f\"Average contour area: {area:.2f} sq. pixels\")",
  "history_output" : "Traceback (most recent call last):\n  File \"cyclic_anticyclonic_eddies.py\", line 4, in <module>\n    from animation import *\n  File \"C:\\Users\\user\\gw-workspace\\j50bi76jkt8\\animation.py\", line 7, in <module>\n    model.eval()\nNameError: name 'model' is not defined\n",
  "history_begin_time" : 1664305252291,
  "history_end_time" : 1664305262344,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "c9309rlb7ph",
  "history_input" : "#Demonstrate the beginnings of how one can use classical computer vision techniques to recover eddy contours from the predicted segnmentation masks.\n\nfrom eddy_import import *\nfrom animation import *\np = preds[0].astype(np.uint8)\n\nprint(f\"Number of anticyclonic eddies: {count_eddies(p, eddy_type='anticyclonic')}\")\nprint(f\"Number of cyclonic eddies: {count_eddies(p, eddy_type='cyclonic')}\")\nprint(f\"Number of both eddies: {count_eddies(p, eddy_type='both')}\")\n\n# draw contours on the image\nthr = cv2.threshold(p, 0, 1, cv2.THRESH_BINARY)[1].astype(np.uint8)\ncontours, hierarchy = cv2.findContours(thr, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\nimg = np.zeros(p.shape, np.uint8)\ncv2.drawContours(img, contours, -1, (255, 255, 255), 1)\nplt.imshow(img, cmap=\"gray\")\nplt.axis(\"off\")\n\n# get average contour area\narea = 0\nfor cnt in contours:\n    area += cv2.contourArea(cnt)\narea /= len(contours)\nprint(f\"Average contour area: {area:.2f} sq. pixels\")",
  "history_output" : "Traceback (most recent call last):\n  File \"cyclic_anticyclonic_eddies.py\", line 4, in <module>\n    from animation import *\n  File \"C:\\Users\\user\\gw-workspace\\c9309rlb7ph\\animation.py\", line 7, in <module>\n    model.eval()\nNameError: name 'model' is not defined\n",
  "history_begin_time" : 1664280918080,
  "history_end_time" : 1664280927746,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "HR7ppBsPyOiw",
  "history_input" : "#Demonstrate the beginnings of how one can use classical computer vision techniques to recover eddy contours from the predicted segnmentation masks.\n\nfrom eddy_import import *\nfrom animation import *\np = preds[0].astype(np.uint8)\n\nprint(f\"Number of anticyclonic eddies: {count_eddies(p, eddy_type='anticyclonic')}\")\nprint(f\"Number of cyclonic eddies: {count_eddies(p, eddy_type='cyclonic')}\")\nprint(f\"Number of both eddies: {count_eddies(p, eddy_type='both')}\")\n\n# draw contours on the image\nthr = cv2.threshold(p, 0, 1, cv2.THRESH_BINARY)[1].astype(np.uint8)\ncontours, hierarchy = cv2.findContours(thr, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\nimg = np.zeros(p.shape, np.uint8)\ncv2.drawContours(img, contours, -1, (255, 255, 255), 1)\nplt.imshow(img, cmap=\"gray\")\nplt.axis(\"off\")\n\n# get average contour area\narea = 0\nfor cnt in contours:\n    area += cv2.contourArea(cnt)\narea /= len(contours)\nprint(f\"Average contour area: {area:.2f} sq. pixels\")",
  "history_output" : "Traceback (most recent call last):\n  File \"cyclic_anticyclonic_eddies.py\", line 4, in <module>\n    from animation import *\n  File \"C:\\Users\\user\\gw-workspace\\HR7ppBsPyOiw\\animation.py\", line 7, in <module>\n    model.eval()\nNameError: name 'model' is not defined\n",
  "history_begin_time" : 1664280680549,
  "history_end_time" : 1664280689987,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "4t83jm3gxa6",
  "history_input" : "#Demonstrate the beginnings of how one can use classical computer vision techniques to recover eddy contours from the predicted segnmentation masks.\n\nfrom eddy_import import *\np = preds[0].astype(np.uint8)\n\nprint(f\"Number of anticyclonic eddies: {count_eddies(p, eddy_type='anticyclonic')}\")\nprint(f\"Number of cyclonic eddies: {count_eddies(p, eddy_type='cyclonic')}\")\nprint(f\"Number of both eddies: {count_eddies(p, eddy_type='both')}\")\n\n# draw contours on the image\nthr = cv2.threshold(p, 0, 1, cv2.THRESH_BINARY)[1].astype(np.uint8)\ncontours, hierarchy = cv2.findContours(thr, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\nimg = np.zeros(p.shape, np.uint8)\ncv2.drawContours(img, contours, -1, (255, 255, 255), 1)\nplt.imshow(img, cmap=\"gray\")\nplt.axis(\"off\")\n\n# get average contour area\narea = 0\nfor cnt in contours:\n    area += cv2.contourArea(cnt)\narea /= len(contours)\nprint(f\"Average contour area: {area:.2f} sq. pixels\")",
  "history_output" : "Traceback (most recent call last):\n  File \"cyclic_anticyclonic_eddies.py\", line 4, in <module>\n    p = preds[0].astype(np.uint8)\nNameError: name 'preds' is not defined\n",
  "history_begin_time" : 1664279939070,
  "history_end_time" : 1664279946322,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "wy2mrr1pzcx",
  "history_input" : "p = preds[0].astype(np.uint8)\n\nprint(f\"Number of anticyclonic eddies: {count_eddies(p, eddy_type='anticyclonic')}\")\nprint(f\"Number of cyclonic eddies: {count_eddies(p, eddy_type='cyclonic')}\")\nprint(f\"Number of both eddies: {count_eddies(p, eddy_type='both')}\")\n\n# draw contours on the image\nthr = cv2.threshold(p, 0, 1, cv2.THRESH_BINARY)[1].astype(np.uint8)\ncontours, hierarchy = cv2.findContours(thr, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\nimg = np.zeros(p.shape, np.uint8)\ncv2.drawContours(img, contours, -1, (255, 255, 255), 1)\nplt.imshow(img, cmap=\"gray\")\nplt.axis(\"off\")\n\n# get average contour area\narea = 0\nfor cnt in contours:\n    area += cv2.contourArea(cnt)\narea /= len(contours)\nprint(f\"Average contour area: {area:.2f} sq. pixels\")",
  "history_output" : "Cannot run program \"python3.8\" (in directory \"C:\\Users\\user\\gw-workspace\\wy2mrr1pzcx\"): CreateProcess error=2, The system cannot find the file specified",
  "history_begin_time" : 1663038354807,
  "history_end_time" : 1663038355465,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "vdkiei7dslj",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664280754751,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "fkojez0yrvx",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664280754759,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "i06gpib9bim",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664372085037,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "i57tkakfitd",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373327340,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Stopped"
},]
