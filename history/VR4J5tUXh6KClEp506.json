[{
  "history_id" : "q17lrcd379y",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373325485,
  "history_notes" : null,
  "history_process" : "slycsi",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "zmxaujoyp5r",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373325992,
  "history_notes" : null,
  "history_process" : "3hm7db",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "rmdxjkhl2lg",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373326125,
  "history_notes" : null,
  "history_process" : "98bbcl",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "iqunwn9ba6x",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373326186,
  "history_notes" : null,
  "history_process" : "rqo3du",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "maz0sp2vb64",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373326335,
  "history_notes" : null,
  "history_process" : "ljp3lh",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "rbu0hqridjn",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373326444,
  "history_notes" : null,
  "history_process" : "28eg4u",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "k2t61hdr0ax",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373326639,
  "history_notes" : null,
  "history_process" : "399tue",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "s9wl1621gu6",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373326731,
  "history_notes" : null,
  "history_process" : "nilvzu",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "4yhunpoknta",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373326782,
  "history_notes" : null,
  "history_process" : "n8mnz6",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "eawmapd179h",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373326894,
  "history_notes" : null,
  "history_process" : "af1vb9",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "b57sn4hb74p",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373326982,
  "history_notes" : null,
  "history_process" : "lo7r50",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "otxsmjvhdlm",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373327076,
  "history_notes" : null,
  "history_process" : "rk2na1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "pnenz2pmxba",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373327103,
  "history_notes" : null,
  "history_process" : "w484ne",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "6gos8ru90xt",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373327185,
  "history_notes" : null,
  "history_process" : "sv4c0f",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "o1sdtbwk2sg",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373327317,
  "history_notes" : null,
  "history_process" : "ohe0x9",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "i57tkakfitd",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373327340,
  "history_notes" : null,
  "history_process" : "kaedp2",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1agk3io5hkn",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373327408,
  "history_notes" : null,
  "history_process" : "nzmtjk",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "tc4tgtsq1ex",
  "history_input" : "# Importing the required libraries for eddy workflow\nfrom eddy_import import *\nimport os\nfrom datetime import datetime\n\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom py_eddy_tracker import data\nfrom py_eddy_tracker.dataset.grid import RegularGridDataset",
  "history_output" : "",
  "history_begin_time" : 1664372229340,
  "history_end_time" : 1664373327556,
  "history_notes" : null,
  "history_process" : "6gs3ym",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "dw17yphn7s2",
  "history_input" : "# Defining the start_axes, update_axes, plot_variabe  and setting the paths for eddy workflow\nfrom eddy_import import *\n\ndef start_axes(title):\n    fig = plt.figure(figsize=(13, 5))\n    ax = fig.add_axes([0.03, 0.03, 0.90, 0.94])\n    ax.set_aspect(\"equal\")\n    ax.set_title(title, weight=\"bold\")\n    return ax\n\n\ndef update_axes(ax, mappable=None):\n    ax.grid()\n    if mappable:\n        plt.colorbar(mappable, cax=ax.figure.add_axes([0.94, 0.05, 0.01, 0.9]))\n\n\ndef plot_variable(grid_object, var_name, ax_title, **kwargs):\n    ax = start_axes(ax_title)\n    m = grid_object.display(ax, var_name, **kwargs)\n    update_axes(ax, m)\n    ax.set_xlim(grid_object.x_c.min(), grid_object.x_c.max())\n    ax.set_ylim(grid_object.y_c.min(), grid_object.y_c.max())\n    return ax, m\n\ndata_root = os.path.join(os.path.expanduser(\"~\"), \"ML_eddies\")\ntrain_folder = os.path.join(data_root, \"cds_ssh_1998-2018_10day_interval\")\ntest_folder = os.path.join(data_root, \"cds_ssh_2019_10day_interval\")\n\nexample_file = os.path.join(test_folder, \"dt_global_twosat_phy_l4_20190101_vDT2021.nc\")\ndate = datetime(2019, 1, 1)\ng = RegularGridDataset(example_file, \"longitude\", \"latitude\")",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\n",
  "history_begin_time" : 1664372253945,
  "history_end_time" : 1664373327646,
  "history_notes" : null,
  "history_process" : "23nut7",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "hdasavf2x3i",
  "history_input" : "# setting the vmin and vmax using the eddy 'plot_variable' method\nfrom eddy_paths import *\nfrom copy import deepcopy\n\nax, m = plot_variable(\n    g,\n    \"adt\",\n    f\"ADT (m) before high-pass filter\",\n    vmin=-0.15,\n    vmax=0.15,\n)\nwavelength_km = 700\ng_filtered = deepcopy(g)\ng_filtered.bessel_high_filter(\"adt\", wavelength_km)\nax, m = plot_variable(\n    g_filtered,\n    \"adt\",\n    f\"ADT (m) filtered (Final: {wavelength_km} km)\",\n    vmin=-0.15,\n    vmax=0.15,\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nNo filtering above 85.000000 degrees of latitude\n",
  "history_begin_time" : 1664372268102,
  "history_end_time" : 1664373327652,
  "history_notes" : null,
  "history_process" : "zr8vzj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "57qv0bhgtuo",
  "history_input" : "# code to identify eddies, generate segmentation mask from the file and generate segmetation masks\nfrom eddy_import import *\nfrom matplotlib.path import Path\nfrom py_eddy_tracker.poly import create_vertice\nfrom copy import deepcopy\nfrom eddy_paths import *\n\n\ndef generate_segmentation_mask_from_file(\n    gridded_ssh_file,\n    date,\n    ssh_var=\"adt\",\n    u_var=\"ugosa\",\n    v_var=\"vgosa\",\n    high_pass_wavelength_km=700,\n    x_offset=0,\n    y_offset=0,\n):\n    g, g_filtered, anticyclonic, cyclonic = identify_eddies(\n        gridded_ssh_file, date, ssh_var, u_var, v_var, high_pass_wavelength_km\n    )\n    mask = generate_segmentation_mask(\n        g_filtered, anticyclonic, cyclonic, x_offset, y_offset\n    )\n    var = g.grid(ssh_var)\n    var_filtered = g_filtered.grid(ssh_var)\n    return var, var_filtered, mask\n\n\ndef identify_eddies(\n    gridded_ssh_file,\n    date,\n    ssh_var=\"adt\",\n    u_var=\"ugosa\",\n    v_var=\"vgosa\",\n    high_pass_wavelength_km=700,\n):\n    g = RegularGridDataset(gridded_ssh_file, \"longitude\", \"latitude\")\n    g_filtered = deepcopy(g)  # make a copy so we don't alter the original\n    g_filtered.bessel_high_filter(ssh_var, high_pass_wavelength_km)\n    anticyclonic, cyclonic = g_filtered.eddy_identification(ssh_var, u_var, v_var, date)\n    return g, g_filtered, anticyclonic, cyclonic\n\n\ndef generate_segmentation_mask(\n    grid_dataset, anticyclonic, cyclonic, x_offset, y_offset, plot=False\n):\n    \"\"\"\n    Creates a numpy array to store the segmentation mask for the grid_dataset.\n    The mask contains classes 0: no eddy, 1: anticyclonic eddy, 2: cyclonic eddy.\n    \"\"\"\n    assert (\n        cyclonic.sign_legend == \"Cyclonic\"\n        and anticyclonic.sign_legend == \"Anticyclonic\"\n    ), \"Check whether the correct order for (anti)cyclonic observations were provided.\"\n    mask = np.zeros(grid_dataset.grid(\"adt\").shape, dtype=np.uint8)\n    # cyclonic should have the same: x_name = 'contour_lon_e', y_name = 'contour_lat_e'\n    x_name, y_name = anticyclonic.intern(False)\n    for eddy in anticyclonic:\n        x_list = (eddy[x_name] - x_offset) % 360 + x_offset\n        vertices = create_vertice(x_list, eddy[y_name] + y_offset)\n        i, j = Path(vertices).pixels_in(grid_dataset)\n        mask[i, j] = 1\n\n    for eddy in cyclonic:\n        x_list = (eddy[x_name] - x_offset) % 360 + x_offset\n        y_list = eddy[y_name] + y_offset\n        i, j = Path(create_vertice(x_list, y_list)).pixels_in(grid_dataset)\n        mask[i, j] = 2\n\n    if plot:\n        ax, m = plot_variable(grid_dataset, mask, \"Segmentation Mask\", cmap=\"viridis\")\n    return mask",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\n",
  "history_begin_time" : 1664372299208,
  "history_end_time" : 1664373327682,
  "history_notes" : null,
  "history_process" : "4bd5xp",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jyso8umy5ja",
  "history_input" : "#code for plotting segmentation masks, antcyclonic display, cyclonic display and updating the axis\nfrom eddy_plots import *\nfrom eddy_paths import *\nfrom copy import deepcopy\n\ng, g_filtered, anticyclonic, cyclonic = identify_eddies(example_file, date)\nax, m = plot_variable(\n    g_filtered, \"adt\", \"Detected Eddies on ADT (m)\", vmin=-0.15, vmax=0.15, cmap=\"Greys\"\n)\nanticyclonic.display(\n    ax, color=\"r\", linewidth=0.75, label=\"Anticyclonic ({nb_obs} eddies)\", ref=-180\n)\ncyclonic.display(\n    ax, color=\"b\", linewidth=0.75, label=\"Cyclonic ({nb_obs} eddies)\", ref=-180\n)\nax.legend()\nupdate_axes(ax)\n\n# Plot segmentation mask\nmask = generate_segmentation_mask(\n    g_filtered, anticyclonic, cyclonic, -180, 0, plot=True\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nNo filtering above 85.000000 degrees of latitude\nC:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\site-packages\\numpy\\lib\\function_base.py:4691: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.\n  arr.partition(\n",
  "history_begin_time" : 1664372311380,
  "history_end_time" : 1664373327687,
  "history_notes" : null,
  "history_process" : "2if9sm",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "4t1mty2pn5a",
  "history_input" : "#Code for generating the masks in parallel and getting dates and files\n\nfrom eddy_import import *\nfrom eddy_plots import *\nimport multiprocessing\n\n\ndef generate_masks_in_parallel(\n    files,\n    dates,\n    ssh_var=\"adt\",\n    u_var=\"ugosa\",\n    v_var=\"vgosa\",\n    high_pass_wavelength_km=700,\n    x_offset=-180,\n    y_offset=0,\n    num_processes=8,\n    plot=False,\n    save=True,\n):\n    args = [\n        (file, date, ssh_var, u_var, v_var, high_pass_wavelength_km, x_offset, y_offset)\n        for file, date in zip(files, dates)\n    ]\n    pool = multiprocessing.Pool(processes=num_processes)\n    results = pool.starmap(generate_segmentation_mask_from_file, args)\n\n    vars_ = []\n    vars_filtered = []\n    masks = []\n    for result in results:\n        vars_.append(result[0])\n        vars_filtered.append(result[1])\n        masks.append(result[2])\n\n    # concatenate list into single numpy array and return\n    masks = np.stack(masks, axis=0)\n    vars_ = np.stack(vars_, axis=0).astype(np.float32)\n    vars_filtered = np.stack(vars_filtered, axis=0).astype(np.float32)\n\n    if save:\n        # find common folder across all files\n        common_folder = os.path.commonpath(files)\n        years = sorted(set([date.year for date in dates]))\n        year_str = f\"{years[0]}\" if len(years) == 1 else f\"{min(years)}-{max(years)}\"\n        save_path = os.path.join(\n            common_folder, f\"global_pet_masks_with_{ssh_var}_{year_str}.npz\"\n        )\n        np.savez_compressed(\n            save_path,\n            masks=masks,\n            dates=dates,\n            var=vars_,\n            var_filtered=vars_filtered,\n        )\n        print(f\"Saved masks to {save_path}\")\n\n    return vars_, vars_filtered, masks\n\n\nfrom itertools import product\n\n\ndef get_dates_and_files(years, months, days, folder, file_pattern):\n    \"\"\"\n    Given a filename pattern and a list of years months and days,\n    fill in the filename pattern with the date and return\n    a list of filenames and a list of associated `datetime` objects.\n\n    Args:\n        years (list): list of years, e.g., [1993, 1994, 1995, 1996]\n        months (list): list of months, e.g., [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n        days (list): list of days, e.g., [1, 10, 20, 30] for every 10th day\n        folder (str): folder where the files are located\n        file_pattern (str): filename pattern, e.g.,\n            \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n    Returns:\n        files (list): full/absolute path to each netCDF file in the list of dates\n        dates (list): list of `datetime` objects formed from the combination of years, months and days\n    \"\"\"\n    dates, files = [], []\n    for y, m, d in product(years, months, days):  # cartesian product\n        try:\n            date = datetime(y, m, d)\n            file = os.path.join(folder, file_pattern.format(year=y, month=m, day=d))\n            dates.append(date)\n            files.append(file)\n        # catch ValueError thrown by datetime if date is not valid\n        except ValueError:\n            pass\n    years = f\"{years[0]}\" if len(years) == 1 else f\"{min(years)}-{max(years)}\"\n    print(f\"Found {len(dates)} files for {years}.\")\n    return dates, files",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\n",
  "history_begin_time" : 1664372402779,
  "history_end_time" : 1664373327691,
  "history_notes" : null,
  "history_process" : "l9f2t3",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "e9q0qpe39xs",
  "history_input" : "#getting the test dates and files of training sets from 1998 - 2018 and from training set 2019 and also setting the logging level as ERROR\nfrom eddy_import import *\nfrom importing_multiprocessor import *\nfrom eddy_paths import *\nfrom eddy_plots import *\nimport logging\nlogging.getLogger(\"pet\").setLevel(logging.ERROR)\n\n# enter the AVISO filename pattern\n# year, month, and day in file_pattern will be filled in get_dates_and_files:\nfile_pattern = \"dt_global_twosat_phy_l4_{year:04d}{month:02d}{day:02d}_vDT2021.nc\"\n\n# training set: 1998 - 2018\ntrain_dates, train_files = get_dates_and_files(\n    range(1998, 2019), range(1, 13), [1, 10, 20, 30], train_folder, file_pattern\n)\ntrain_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n    train_files, train_dates\n)\n\n\n# test set: 2019\ntest_dates, test_files = get_dates_and_files(\n    [2019], range(1, 13), [1, 10, 20, 30], test_folder, file_pattern\n)\ntest_adt, test_adt_filtered, test_masks = generate_masks_in_parallel(\n    test_files, test_dates\n)",
  "history_output" : "We assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\nWe assume pixel position of grid is centered for C:\\Users\\user\\ML_eddies\\cds_ssh_2019_10day_interval\\dt_global_twosat_phy_l4_20190101_vDT2021.nc\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 116, in spawn_main\n    exitcode = _main(fd, parent_sentinel)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 125, in _main\n    prepare(preparation_data)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 236, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 287, in _fixup_main_from_path\n    main_content = runpy.run_path(main_path,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 265, in run_path\n    return _run_module_code(code, init_globals, run_name,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 97, in _run_module_code\n    _run_code(code, mod_globals, init_globals,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_logger.py\", line 17, in <module>\n    train_adt, train_adt_filtered, train_masks = generate_masks_in_parallel(\n  File \"C:\\Users\\user\\gw-workspace\\e9q0qpe39xs\\importing_multiprocessor.py\", line 25, in generate_masks_in_parallel\n    pool = multiprocessing.Pool(processes=num_processes)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 119, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 212, in __init__\n    self._repopulate_pool()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 303, in _repopulate_pool\n    return self._repopulate_pool_static(self._ctx, self.Process,\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\pool.py\", line 326, in _repopulate_pool_static\n    w.start()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\process.py\", line 121, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\context.py\", line 327, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\popen_spawn_win32.py\", line 45, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 154, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Users\\user\\anaconda3\\envs\\eddy_env\\lib\\multiprocessing\\spawn.py\", line 134, in _check_not_importing_main\n    raise RuntimeError('''\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nFound 987 files for 1998-2018.\n",
  "history_begin_time" : 1664372417161,
  "history_end_time" : 1664373343361,
  "history_notes" : null,
  "history_process" : "vv80ng",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "kax1kq6rq19",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373328798,
  "history_notes" : null,
  "history_process" : "4o6voy",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "k2wkwvq4dnh",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1664373328816,
  "history_notes" : null,
  "history_process" : "j4jm66",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "fq5s99n7n7l",
  "history_input" : "# Dependencies Installation Script\npip install torch torchvision torchaudio matplotlib tensorboard torchmetrics seaborn opencv-python tqdm pandas\n",
  "history_output" : "Cannot run program \"bash.exe\" (in directory \"C:\\Users\\user\\gw-workspace\\6Kx9szB8ZF1QpjRCRZTzJkqi69\"): CreateProcess error=2, The system cannot find the file specified",
  "history_begin_time" : 1664372229674,
  "history_end_time" : 1664373328899,
  "history_notes" : null,
  "history_process" : "39ur7y",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "4tr62dxgdsp",
  "history_input" : "#eddy dependencies\ndef start_axes(title):\n    fig = plt.figure(figsize=(13, 5))\n    ax = fig.add_axes([0.03, 0.03, 0.90, 0.94])\n    ax.set_aspect(\"equal\")\n    ax.set_title(title, weight=\"bold\")\n    return ax\n\n\ndef update_axes(ax, mappable=None):\n    ax.grid()\n    if mappable:\n        plt.colorbar(mappable, cax=ax.figure.add_axes([0.94, 0.05, 0.01, 0.9]))\n\n\ndef plot_variable(grid_object, var_name, ax_title, **kwargs):\n    ax = start_axes(ax_title)\n    m = grid_object.display(ax, var_name, **kwargs)\n    update_axes(ax, m)\n    ax.set_xlim(grid_object.x_c.min(), grid_object.x_c.max())\n    ax.set_ylim(grid_object.y_c.min(), grid_object.y_c.max())\n    return ax, m",
  "history_output" : "",
  "history_begin_time" : 1664372229933,
  "history_end_time" : 1664373328904,
  "history_notes" : null,
  "history_process" : "uolls4",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "8ccp5vsy3gs",
  "history_input" : "#Data utils code\nimport os\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport torch\nfrom matplotlib.animation import ArtistAnimation\nfrom PIL import Image\nfrom sklearn.model_selection import train_test_split\nfrom torch.utils.data import DataLoader\nfrom torchvision import transforms\nfrom tqdm.auto import tqdm\n\ntorch.manual_seed(42)\n\n\ndef get_eddy_dataloader(\n    files, binary=False, transform=None, batch_size=32, shuffle=True, val_split=0\n):\n    \"\"\"\n    Given a list of npz files, return dataloader(s) for train (and val).\n    Args:\n        files (list) : list of npz files\n        binary (bool) : whether to use binary masks or not.\n                        If True, treat cyclonic and anticyclonic eddies as single positive class.\n        transform (callable) : optional transform to be applied on a sample.\n        batch_size (int) : batch size for dataloader\n        shuffle (bool) : whether to shuffle the dataset or not\n        val_split (float) : fraction of data to be used as validation set.\n                            If 0, no validation split is performed.\n    Returns:\n        (train_loader, val_loader) if val_split > 0; (train_loader, None) otherwise\n    \"\"\"\n    ds, _ = get_eddy_dataset(files, binary, transform, val_split)\n    loader_kwargs = dict(batch_size=batch_size, shuffle=shuffle, pin_memory=True)\n    if val_split > 0:\n        train_ds, val_ds = ds\n        train_dl = DataLoader(train_ds, **loader_kwargs)\n        val_dl = DataLoader(val_ds, **loader_kwargs)\n    else:\n        train_dl = DataLoader(ds, **loader_kwargs)\n        val_dl = None\n    return train_dl, val_dl\n\n\ndef get_eddy_dataset(files, binary=None, transform=None, val_split=0):\n    masks, dates, _, var_filtered, lon, lat, npz_dict = read_npz_files(files)\n    print(f\"Read {len(masks)} samples from {files}.\")\n    if val_split > 0:\n        # split into training and validation sets (80% training, 20% validation)\n        train_idx, val_idx = train_test_split(\n            np.arange(len(masks)), test_size=val_split, random_state=42\n        )\n        train_ds = EddyDataset(\n            masks[train_idx],\n            var_filtered[train_idx],\n            dates[train_idx],\n            transform=transform,\n            binary_mask=binary,\n        )\n\n        val_ds = EddyDataset(\n            masks[val_idx],\n            var_filtered[val_idx],\n            dates[val_idx],\n            transform=transform,\n            binary_mask=binary,\n        )\n    else:\n        train_ds = EddyDataset(\n            masks, var_filtered, dates, transform=transform, binary_mask=binary\n        )\n        val_ds = None\n    return train_ds, val_ds\n\n\ndef read_npz_files(npz_files: list):\n    \"\"\"Load a list of npz files, concatenate, and return separate arrays for eddy segmentation\"\"\"\n    # load npz file into separate variables\n    if isinstance(npz_files, str):\n        npz_files = [npz_files]\n    npz_contents = [np.load(file, allow_pickle=True) for file in npz_files]\n    masks, dates, var, var_filtered, lon_subset, lat_subset = eddy_dict_to_vars(\n        npz_contents\n    )\n    return masks, dates, var, var_filtered, lon_subset, lat_subset, npz_contents\n\n\ndef eddy_dict_to_vars(npz_contents):\n    masks = np.concatenate(\n        [npz_content[\"masks\"] for npz_content in npz_contents], axis=0\n    )\n    dates = np.concatenate(\n        [npz_content[\"dates\"] for npz_content in npz_contents], axis=0\n    )\n    # var = np.concatenate([npz_content[\"var\"] for npz_content in npz_contents], axis=0)\n    var = None\n    var_filtered = np.concatenate(\n        [npz_content[\"var_filtered\"] for npz_content in npz_contents], axis=0\n    )\n    if \"lon_subset\" in npz_contents[0]:\n        lon_subset = np.concatenate(\n            [npz_content[\"lon_subset\"] for npz_content in npz_contents], axis=0\n        )\n        lat_subset = np.concatenate(\n            [npz_content[\"lat_subset\"] for npz_content in npz_contents], axis=0\n        )\n    else:\n        lon_subset = lat_subset = None\n    return masks, dates, var, var_filtered, lon_subset, lat_subset\n\n\nclass EddyDataset(torch.utils.data.Dataset):\n    def __init__(self, masks, gv, dates, transform=None, binary_mask=False):\n        \"\"\"PyTorch dataset for eddy detection\n        Args:\n            masks (np.array): array of segmentation masks with shape: (N_dates, N_lon, N_lat)\n                Can have 3 values: 0, 1 and 2, where 1 = anticyclonic, 2 = cyclonic and 0 = no eddy\n            gv (np.array): array of GV maps with shape: (N_dates, N_lon, N_lat)\n                Example GVs: sea level anomaly, absolute dynamic topography\n            transform (callable, optional): Transformation to be applied on a sample.\n            binary_mask (bool, optional): If true, all eddies (anticyclonic and cyclonic) will be assigned a value of 1\n        \"\"\"\n        self.masks = masks\n        self.gv = gv.astype(np.float32)  # GV stands for Geophysical Variable\n        self.dates = dates\n        self.transform = transform\n        self.binary_mask = binary_mask\n\n    def __getitem__(self, index, return_date=True):\n        # return image and mask for a given index\n        image = self.gv[index, :, :].copy()\n        mask = self.masks[index, :, :].copy()\n        date = self.dates[index]\n\n        # transpose\n        image = image.T\n        mask = mask.T\n\n        # address regions of land that are represented as -2147483648\n        image[image < -10000] = 0\n\n        if image.ndim == 2:\n            image = np.expand_dims(image, axis=0)  # make ndim = 3\n\n        if self.transform:\n            image = self.transform(image)\n\n        # if image and mask are numpy arrays, convert them to torch tensors\n        if isinstance(image, np.ndarray):\n            image = torch.from_numpy(image)\n        if isinstance(mask, np.ndarray):\n            mask = torch.from_numpy(mask)\n\n        if self.binary_mask:\n            mask[mask >= 1] = 1\n\n        # convert to float\n        image = image.float()\n\n        if return_date:\n            # convert date to tensor\n            # date_str = date.strftime(\"%Y-%m-%d\")\n            # date =\n            return image, mask, index\n        else:\n            return image, mask\n\n    def __len__(self):\n        return self.masks.shape[0]\n\n    def plot_sample(self, N=5):\n\n        # var in first column, mask in second column\n        num_cols = 2\n        num_rows = N\n        fig, ax = plt.subplots(num_rows, num_cols, figsize=(num_cols * 4, num_rows * 4))\n        ax[0, 0].set_title(\"GV\")\n        ax[0, 1].set_title(\"Mask\")\n        for i in range(num_rows):\n            # get random sample from self\n            n = np.random.randint(0, len(self))\n            gv, mask, index = self.__getitem__(n, return_date=True)\n            gv = np.squeeze(gv.cpu().detach().numpy())\n            mask = np.squeeze(mask.cpu().detach().numpy())\n            date = self.dates[index].strftime(\"%Y-%m-%d\")\n            # ax[i, 0].pcolormesh(lon_subset, lat_subset, gv.T, cmap=\"RdBu_r\", vmin=-0.15, vmax=0.15)\n            ax[i, 0].imshow(gv, cmap=\"RdBu_r\", vmin=-0.15, vmax=0.15)\n            ax[i, 0].set_title(f\"GV ({date})\")\n            ax[i, 0].axis(\"off\")\n            ax[i, 1].imshow(mask, cmap=\"viridis\")\n            ax[i, 1].set_title(f\"Mask ({date})\")\n            ax[i, 1].axis(\"off\")\n\n    def animate(self):\n        fig, ax = plt.subplots(1, 2, figsize=(20, 10))\n        print(f\"Drawing animation of GV and segmentation mask\")\n        artists = []\n        for i in tqdm(range(len(self)), desc=\"Animating eddies:\"):\n            gv, mask, date_idx = self.__getitem__(i, return_date=True)\n            date = self.dates[date_idx].strftime(\"%Y-%m-%d\")\n            im1 = ax[0].imshow(gv.squeeze(), cmap=\"RdBu_r\", vmin=-0.15, vmax=0.15)\n            t1 = ax[0].text(\n                0.5,\n                1.05,\n                f\"GV {date}\",\n                size=plt.rcParams[\"axes.titlesize\"],\n                ha=\"center\",\n                transform=ax[0].transAxes,\n            )\n            ax[0].axis(\"off\")\n\n            im2 = ax[1].imshow(mask.squeeze(), cmap=\"viridis\")\n            t2 = ax[1].text(\n                0.5,\n                1.05,\n                f\"Mask {date}\",\n                size=plt.rcParams[\"axes.titlesize\"],\n                ha=\"center\",\n                transform=ax[1].transAxes,\n            )\n            ax[1].axis(\"off\")\n            plt.tight_layout()\n            artists.append([im1, t1, im2, t2])\n            fig.canvas.draw()\n            fig.canvas.flush_events()\n        animation = ArtistAnimation(fig, artists, interval=500, blit=True)\n        plt.close()\n        return animation\n\ndef transform_ssh(ssh_array):\n    # normalize sea level anomaly between 0 and 1 based on min max\n    ssh_array = (ssh_array - ssh_array.min()) / (ssh_array.max() - ssh_array.min())\n    return ssh_array\n\n\n# convert npy to compressed npz\ndef convert_npy_to_npz(npy_file):\n    npz_file = npy_file.replace(\".npy\", \".npz\")\n    npy_contents = np.load(npy_file)",
  "history_output" : "",
  "history_begin_time" : 1664372229671,
  "history_end_time" : 1664373328918,
  "history_notes" : null,
  "history_process" : "oc42ub",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "t58jtd4jkrr",
  "history_input" : "#Eddynet\nimport collections\nfrom itertools import repeat\nfrom typing import OrderedDict\n\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass EddyNet(nn.Module):\n    \"\"\"\n    PyTorch implementation of EddyNet from Lguensat et al. (2018)\n    Original implementation in TensorFlow: https://github.com/redouanelg/EddyNet\n    \"\"\"\n    def __init__(self, num_classes, num_filters, kernel_size):\n        super(EddyNet, self).__init__()\n        # encoder\n        self.encoder1 = EddyNet._block(1, num_filters, kernel_size, \"enc1\", dropout=0.2)\n        self.pool1 = nn.MaxPool2d(kernel_size=2, stride=2)\n        self.encoder2 = EddyNet._block(\n            num_filters, num_filters, kernel_size, \"enc2\", dropout=0.3\n        )\n        self.pool2 = nn.MaxPool2d(kernel_size=2, stride=2)\n        self.encoder3 = EddyNet._block(\n            num_filters, num_filters, kernel_size, \"enc3\", dropout=0.4\n        )\n        self.pool3 = nn.MaxPool2d(kernel_size=2, stride=2)\n        self.encoder4 = EddyNet._block(\n            num_filters, num_filters, kernel_size, \"enc4\", dropout=0.5\n        )\n\n        # decoder\n        self.decoder3 = EddyNet.decoder_block(\n            num_filters * 2, num_filters, kernel_size, \"dec3\", dropout=0.4\n        )\n        self.decoder2 = EddyNet.decoder_block(\n            num_filters * 2, num_filters, kernel_size, \"dec2\", dropout=0.3\n        )\n        self.decoder1 = EddyNet.decoder_block(\n            num_filters * 2, num_filters, kernel_size, \"dec1\", dropout=0.2\n        )\n\n        # final layer\n        self.final_conv = nn.Conv2d(\n            num_filters, num_classes, kernel_size=1, padding=0, bias=False\n        )\n\n    @staticmethod\n    def conv_block(in_channels, out_channels, kernel_size, name, num, dropout=0):\n        layers = {\n            f\"{name}_conv{num}\": Conv2dSame(in_channels, out_channels, kernel_size),\n            f\"{name}_bn{num}\": nn.BatchNorm2d(out_channels),\n            f\"{name}_relu{num}\": nn.ReLU(inplace=True),\n        }\n        if dropout > 0:\n            layers[f\"{name}_dropout\"] = nn.Dropout(p=dropout)\n\n        return nn.Sequential(OrderedDict(layers))\n\n    @staticmethod\n    def _block(in_channels, out_channels, kernel_size, name, dropout=0):\n        conv1 = EddyNet.conv_block(in_channels, out_channels, kernel_size, name, 1)\n        conv2 = EddyNet.conv_block(\n            out_channels, out_channels, kernel_size, name, 2, dropout=dropout\n        )\n        return nn.Sequential(conv1, conv2)\n\n    @staticmethod\n    def decoder_block(in_channels, out_channels, kernel_size, name, dropout=0):\n        return EddyNet._block(in_channels, out_channels, kernel_size, name, dropout)\n\n    def forward(self, x):\n        # encoder\n        enc1 = self.encoder1(x)\n        pool1 = self.pool1(enc1)\n\n        enc2 = self.encoder2(pool1)\n        pool2 = self.pool2(enc2)\n\n        enc3 = self.encoder3(pool2)\n        pool3 = self.pool3(enc3)\n\n        # bottleneck?\n        enc4 = self.encoder4(pool3)\n\n        # decoder\n        dec3 = nn.Upsample(scale_factor=2, mode=\"bilinear\", align_corners=False)(enc4)\n        dec3 = torch.cat((dec3, enc3), dim=1)\n        dec3 = self.decoder3(dec3)\n\n        dec2 = nn.Upsample(scale_factor=2, mode=\"bilinear\", align_corners=False)(dec3)\n        dec2 = torch.cat((dec2, enc2), dim=1)\n        dec2 = self.decoder2(dec2)\n\n        dec1 = nn.Upsample(scale_factor=2, mode=\"bilinear\", align_corners=False)(dec2)\n        dec1 = torch.cat((dec1, enc1), dim=1)\n        dec1 = self.decoder1(dec1)\n\n        # final layer\n        final = self.final_conv(dec1)\n\n        # softmax\n        final = nn.Softmax(dim=1)(final)\n\n        return final\n\n\nclass Conv2dSame(nn.Module):\n    \"\"\"Manual convolution with same padding\n    https://discuss.pytorch.org/t/same-padding-equivalent-in-pytorch/85121/9\n    Although PyTorch >= 1.10.0 supports ``padding='same'`` as a keyword\n    argument, this does not export to CoreML as of coremltools 5.1.0,\n    so we need to implement the internal torch logic manually.\n    Currently the ``RuntimeError`` is\n    \"PyTorch convert function for op '_convolution_mode' not implemented\"\n    \"\"\"\n\n    def __init__(\n        self, in_channels, out_channels, kernel_size, stride=1, dilation=1, **kwargs\n    ):\n        \"\"\"Wrap base convolution layer\n        See official PyTorch documentation for parameter details\n        https://pytorch.org/docs/stable/generated/torch.nn.Conv2d.html\n        \"\"\"\n        super().__init__()\n        self.conv = nn.Conv2d(\n            in_channels=in_channels,\n            out_channels=out_channels,\n            kernel_size=kernel_size,\n            stride=stride,\n            dilation=dilation,\n            **kwargs,\n        )\n\n        # Setup internal representations\n        kernel_size_ = _pair(kernel_size)\n        dilation_ = _pair(dilation)\n        self._reversed_padding_repeated_twice = [0, 0] * len(kernel_size_)\n\n        # Follow the logic from ``nn/modules/conv.py:_ConvNd``\n        for d, k, i in zip(\n            dilation_, kernel_size_, range(len(kernel_size_) - 1, -1, -1)\n        ):\n            total_padding = d * (k - 1)\n            left_pad = total_padding // 2\n            self._reversed_padding_repeated_twice[2 * i] = left_pad\n            self._reversed_padding_repeated_twice[2 * i + 1] = total_padding - left_pad\n\n    def forward(self, imgs):\n        \"\"\"Setup padding so same spatial dimensions are returned\n        All shapes (input/output) are ``(N, C, W, H)`` convention\n        :param torch.Tensor imgs:\n        :return torch.Tensor:\n        \"\"\"\n        padded = F.pad(imgs, self._reversed_padding_repeated_twice)\n        return self.conv(padded)\n\n\ndef _ntuple(n):\n    \"\"\"Copy from PyTorch since internal function is not importable\n    See ``nn/modules/utils.py:6``\n    \"\"\"\n\n    def parse(x):\n        if isinstance(x, collections.abc.Iterable):\n            return tuple(x)\n        return tuple(repeat(x, n))\n\n    return parse\n\n\n_pair = _ntuple(2)\nFooter",
  "history_output" : "Traceback (most recent call last):\n  File \"eddynet.py\", line 173, in <module>\n    Footer\nNameError: name 'Footer' is not defined\n",
  "history_begin_time" : 1664372230458,
  "history_end_time" : 1664373328933,
  "history_notes" : null,
  "history_process" : "bzgeyy",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "be2m55xum1f",
  "history_input" : "#Eddy Train Utils\nimport numpy as np\nimport torch\nimport torch.nn as nn\nimport torchmetrics\nfrom torch.utils.tensorboard.summary import hparams\n\n\ndef run_batch(\n    model,\n    loss_fn,\n    x_batch,\n    y_batch,\n    opt=None,\n    sched=None,\n    metrics=None,\n    return_pred=False,\n):\n    \"\"\"Run a batch of data through the model and return loss and metrics.\"\"\"\n    if torch.cuda.is_available():\n        loss_fn = loss_fn.to(device=\"cuda\")\n        x_batch = x_batch.to(device=\"cuda\", non_blocking=True)\n        y_batch = y_batch.to(device=\"cuda\", non_blocking=True)\n\n    # forward pass\n    logits = model(x_batch)\n    if return_pred:\n        preds = logits.argmax(axis=1).squeeze()\n    # reshape so that each pixel in seg. mask can be treated as separate instance\n    mask_flattened, logits = reshape_mask_and_predictions(y_batch, logits)\n    # compute loss\n    loss = loss_fn(logits, mask_flattened)\n    # backward pass\n    if opt is not None:\n        loss.backward()\n        opt.step()\n        opt.zero_grad()\n        if sched is not None:\n            sched.step()\n    # update metrics\n    if metrics is not None:\n        metrics.update(logits, mask_flattened)\n    if return_pred:\n        return loss.item(), preds\n    else:\n        return loss.item()\n\n\ndef reshape_mask_and_predictions(mask, prediction):\n    \"\"\"flatten mask and prediction in each batch\"\"\"\n    mask_reshaped = mask.flatten().to(torch.int64)\n    # pred_reshaped = prediction.flatten(start_dim=-2, end_dim=-1)\n    # logits shape: [B, C, 128, 128] -> [B, 128, 128, C] -> [B * 128 * 128, C]\n    pred_reshaped = prediction.permute((0, 2, 3, 1)).flatten(start_dim=0, end_dim=-2)\n    return mask_reshaped, pred_reshaped\n\n\ndef get_metrics(N, sync):\n    \"\"\"Get the metrics to be used in the training loop.\n    Args:\n        N (int): The number of classes.\n        sync (bool): Whether to use wait for metrics to sync across devices before computing value.\n    Returns:\n        train_metrics (MetricCollection): The metrics to be used in the training loop.\n        val_metrics (MetricCollection): The metrics to be used in validation.\n    \"\"\"\n    # Define metrics and move to GPU if available\n    metrics = [\n        torchmetrics.Accuracy(dist_sync_on_step=sync, num_classes=N),\n        torchmetrics.Precision(\n            average=None,\n            dist_sync_on_step=sync,\n            num_classes=N,\n        ),\n        torchmetrics.Recall(\n            average=None,\n            dist_sync_on_step=sync,\n            num_classes=N,\n        ),\n        torchmetrics.F1Score(\n            average=\"micro\",\n            dist_sync_on_step=sync,\n            num_classes=N,\n        ),\n        # torchmetrics.AUROC(dist_sync_on_step=sync, num_classes=N),\n        # StorePredLabel(dist_sync_on_step=sync),\n    ]\n    if torch.cuda.is_available():  # move metrics to the same device as model\n        [metric.to(\"cuda\") for metric in metrics]\n\n    train_metrics = torchmetrics.MetricCollection(metrics)\n    val_metrics = train_metrics.clone()\n    return train_metrics, val_metrics\n\n\ndef write_metrics_to_tensorboard(N, metrics, writer, epoch, train_or_val):\n    m = metrics.compute()\n    for k, v in m.items():\n        if k == \"StorePredLabel\":\n            pred, label = v\n            label = nn.functional.one_hot(label, N)\n            writer.add_pr_curve(f\"{train_or_val}/pr_curve\", label, pred, epoch)\n        # handle class-level metrics\n        elif isinstance(v, torch.Tensor) and len(v.shape) > 0 and v.shape[-1] > 1:\n            for i, v_ in enumerate(v):\n                if N == 2:  # binary\n                    l = \"negative\" if i == 0 else \"positive\"\n                elif N == 3:\n                    if i == 0:\n                        l = \"negative\"\n                    elif i == 1:\n                        l = \"anticyclonic\"\n                    elif i == 2:\n                        l = \"cyclonic\"\n                else:\n                    raise NotImplementedError(f\"{N} classes not supported\")\n                writer.add_scalar(f\"{train_or_val}/{k}_{l}\", v_, epoch)\n        else:\n            writer.add_scalar(f\"{train_or_val}/{k}\", v, epoch)\n    return m\n\n\ndef filter_scalar_metrics(metrics_dict):\n    \"\"\"Filters the output of metrics.compute() and returns only the scalar metrics.\"\"\"\n    output = {}\n    for k, v in metrics_dict.items():\n        if (isinstance(v, torch.Tensor) or isinstance(v, np.ndarray)) and len(\n            v.shape\n        ) == 0:\n            output[k] = v\n    return output\n\n\ndef add_hparams(\n    torch_tb_writer, hparam_dict, metric_dict, hparam_domain_discrete=None, epoch_num=0\n):\n    \"\"\"Add a set of hyperparameters to be compared in TensorBoard.\n    Args:\n        hparam_dict (dict): Each key-value pair in the dictionary is the\n            name of the hyper parameter and it's corresponding value.\n            The type of the value can be one of `bool`, `string`, `float`,\n            `int`, or `None`.\n        metric_dict (dict): Each key-value pair in the dictionary is the\n            name of the metric and it's corresponding value. Note that the key used\n            here should be unique in the tensorboard record. Otherwise the value\n            you added by ``add_scalar`` will be displayed in hparam plugin. In most\n            cases, this is unwanted.\n        hparam_domain_discrete: (Optional[Dict[str, List[Any]]]) A dictionary that\n            contains names of the hyperparameters and all discrete values they can hold\n    \"\"\"\n    torch._C._log_api_usage_once(\"tensorboard.logging.add_hparams\")\n    if type(hparam_dict) is not dict or type(metric_dict) is not dict:\n        raise TypeError(\"hparam_dict and metric_dict should be dictionary.\")\n    exp, ssi, sei = hparams(hparam_dict, metric_dict, hparam_domain_discrete)\n\n    torch_tb_writer.file_writer.add_summary(exp)\n    torch_tb_writer.file_writer.add_summary(ssi)\n    torch_tb_writer.file_writer.add_summary(sei)\n    for k, v in metric_dict.items():\n        torch_tb_writer.add_scalar(k, v, epoch_num)\n\n\n# Taken from: https://github.com/Bjarten/early-stopping-pytorch/blob/master/pytorchtools.py\nclass EarlyStopping:\n    \"\"\"Early stops the training if validation loss doesn't improve after a given patience.\"\"\"\n\n    def __init__(\n        self,\n        patience=7,\n        verbose=False,\n        delta=0,\n        path=\"checkpoint.pt\",\n        min_epochs=30,\n    ):\n        \"\"\"\n        Args:\n            patience (int): How long to wait after last time validation loss improved.\n                            Default: 7\n            verbose (bool): If True, prints a message for each validation loss improvement.\n                            Default: False\n            delta (float): Minimum change in the monitored quantity to qualify as an improvement.\n                            Default: 0\n            path (str): Path for the checkpoint to be saved to.\n                            Default: 'checkpoint.pt'\n            trace_func (function): trace print function.\n                            Default: print\n        \"\"\"\n        self.patience = patience\n        self.verbose = verbose\n        self.counter = 0\n        self.best_score = None\n        self.early_stop = False\n        self.val_loss_min = np.Inf\n        self.delta = delta\n        self.path = path\n        self.min_epochs = min_epochs\n        self.epochs = 0\n\n    def __call__(self, val_loss, model):\n\n        score = -val_loss\n\n        if self.best_score is None:\n            self.best_score = score\n            self.save_checkpoint(val_loss, model)\n        elif score < self.best_score + self.delta:\n            self.counter += 1\n            if self.counter >= self.patience and self.epochs >= self.min_epochs:\n                self.early_stop = True\n        else:\n            self.best_score = score\n            self.save_checkpoint(val_loss, model)\n            self.counter = 0\n\n        self.epochs += 1\n\n    def save_checkpoint(self, val_loss, model):\n        \"\"\"Saves model when validation loss decrease.\"\"\"\n        if self.verbose:\n            self.trace_func(\n                f\"Validation loss decreased ({self.val_loss_min:.6f} --> {val_loss:.6f}).  Saving model ...\"\n            )\n        torch.save(model.state_dict(), self.path)\n        self.val_loss_min = val_loss",
  "history_output" : "",
  "history_begin_time" : 1664372235116,
  "history_end_time" : 1664373328947,
  "history_notes" : null,
  "history_process" : "bomi2j",
  "host_id" : "100001",
  "indicator" : "Stopped"
}]
